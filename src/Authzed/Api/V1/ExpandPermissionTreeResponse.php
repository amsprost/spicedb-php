<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>authzed.api.v1.ExpandPermissionTreeResponse</code>
 */
class ExpandPermissionTreeResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken expanded_at = 1;</code>
     */
    protected $expanded_at = null;
    /**
     * tree_root is a tree structure whose leaf nodes are subjects, and
     * intermediate nodes represent the various operations (union, intersection,
     * exclusion) to reach those subjects.
     *
     * Generated from protobuf field <code>.authzed.api.v1.PermissionRelationshipTree tree_root = 2;</code>
     */
    protected $tree_root = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Authzed\Api\V1\ZedToken $expanded_at
     *     @type \Authzed\Api\V1\PermissionRelationshipTree $tree_root
     *           tree_root is a tree structure whose leaf nodes are subjects, and
     *           intermediate nodes represent the various operations (union, intersection,
     *           exclusion) to reach those subjects.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PermissionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken expanded_at = 1;</code>
     * @return \Authzed\Api\V1\ZedToken|null
     */
    public function getExpandedAt()
    {
        return $this->expanded_at;
    }

    public function hasExpandedAt()
    {
        return isset($this->expanded_at);
    }

    public function clearExpandedAt()
    {
        unset($this->expanded_at);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken expanded_at = 1;</code>
     * @param \Authzed\Api\V1\ZedToken $var
     * @return $this
     */
    public function setExpandedAt($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\ZedToken::class);
        $this->expanded_at = $var;

        return $this;
    }

    /**
     * tree_root is a tree structure whose leaf nodes are subjects, and
     * intermediate nodes represent the various operations (union, intersection,
     * exclusion) to reach those subjects.
     *
     * Generated from protobuf field <code>.authzed.api.v1.PermissionRelationshipTree tree_root = 2;</code>
     * @return \Authzed\Api\V1\PermissionRelationshipTree|null
     */
    public function getTreeRoot()
    {
        return $this->tree_root;
    }

    public function hasTreeRoot()
    {
        return isset($this->tree_root);
    }

    public function clearTreeRoot()
    {
        unset($this->tree_root);
    }

    /**
     * tree_root is a tree structure whose leaf nodes are subjects, and
     * intermediate nodes represent the various operations (union, intersection,
     * exclusion) to reach those subjects.
     *
     * Generated from protobuf field <code>.authzed.api.v1.PermissionRelationshipTree tree_root = 2;</code>
     * @param \Authzed\Api\V1\PermissionRelationshipTree $var
     * @return $this
     */
    public function setTreeRoot($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\PermissionRelationshipTree::class);
        $this->tree_root = $var;

        return $this;
    }

}

