<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LookupResourcesRequest performs a lookup of all resources of a particular
 * kind on which the subject has the specified permission or the relation in
 * which the subject exists, streaming back the IDs of those resources.
 *
 * Generated from protobuf message <code>authzed.api.v1.LookupResourcesRequest</code>
 */
class LookupResourcesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     */
    protected $consistency = null;
    /**
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     */
    protected $resource_object_type = '';
    /**
     * permission is the name of the permission or relation for which the subject
     * must Check.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     */
    protected $permission = '';
    /**
     * subject is the subject with access to the resources.
     *
     * Generated from protobuf field <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     */
    protected $subject = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Authzed\Api\V1\Consistency $consistency
     *     @type string $resource_object_type
     *           resource_object_type is the type of resource object for which the IDs will
     *           be returned.
     *     @type string $permission
     *           permission is the name of the permission or relation for which the subject
     *           must Check.
     *     @type \Authzed\Api\V1\SubjectReference $subject
     *           subject is the subject with access to the resources.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PermissionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     * @return \Authzed\Api\V1\Consistency|null
     */
    public function getConsistency()
    {
        return $this->consistency;
    }

    public function hasConsistency()
    {
        return isset($this->consistency);
    }

    public function clearConsistency()
    {
        unset($this->consistency);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     * @param \Authzed\Api\V1\Consistency $var
     * @return $this
     */
    public function setConsistency($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\Consistency::class);
        $this->consistency = $var;

        return $this;
    }

    /**
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     * @return string
     */
    public function getResourceObjectType()
    {
        return $this->resource_object_type;
    }

    /**
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setResourceObjectType($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource_object_type = $var;

        return $this;
    }

    /**
     * permission is the name of the permission or relation for which the subject
     * must Check.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     * @return string
     */
    public function getPermission()
    {
        return $this->permission;
    }

    /**
     * permission is the name of the permission or relation for which the subject
     * must Check.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setPermission($var)
    {
        GPBUtil::checkString($var, True);
        $this->permission = $var;

        return $this;
    }

    /**
     * subject is the subject with access to the resources.
     *
     * Generated from protobuf field <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     * @return \Authzed\Api\V1\SubjectReference|null
     */
    public function getSubject()
    {
        return $this->subject;
    }

    public function hasSubject()
    {
        return isset($this->subject);
    }

    public function clearSubject()
    {
        unset($this->subject);
    }

    /**
     * subject is the subject with access to the resources.
     *
     * Generated from protobuf field <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     * @param \Authzed\Api\V1\SubjectReference $var
     * @return $this
     */
    public function setSubject($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\SubjectReference::class);
        $this->subject = $var;

        return $this;
    }

}

