<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>authzed.api.v1.CheckPermissionResponse</code>
 */
class CheckPermissionResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken checked_at = 1;</code>
     */
    protected $checked_at = null;
    /**
     * Permissionship communicates whether or not the subject has the requested
     * permission or has a relationship with the given resource, over the given
     * relation.
     * This value will be authzed.api.v1.PERMISSIONSHIP_HAS_PERMISSION if the
     * requested subject is a member of the computed permission set or there
     * exists a relationship with the requested relation from the given resource
     * to the given subject.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckPermissionResponse.Permissionship permissionship = 2;</code>
     */
    protected $permissionship = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Authzed\Api\V1\ZedToken $checked_at
     *     @type int $permissionship
     *           Permissionship communicates whether or not the subject has the requested
     *           permission or has a relationship with the given resource, over the given
     *           relation.
     *           This value will be authzed.api.v1.PERMISSIONSHIP_HAS_PERMISSION if the
     *           requested subject is a member of the computed permission set or there
     *           exists a relationship with the requested relation from the given resource
     *           to the given subject.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PermissionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken checked_at = 1;</code>
     * @return \Authzed\Api\V1\ZedToken|null
     */
    public function getCheckedAt()
    {
        return $this->checked_at;
    }

    public function hasCheckedAt()
    {
        return isset($this->checked_at);
    }

    public function clearCheckedAt()
    {
        unset($this->checked_at);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.ZedToken checked_at = 1;</code>
     * @param \Authzed\Api\V1\ZedToken $var
     * @return $this
     */
    public function setCheckedAt($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\ZedToken::class);
        $this->checked_at = $var;

        return $this;
    }

    /**
     * Permissionship communicates whether or not the subject has the requested
     * permission or has a relationship with the given resource, over the given
     * relation.
     * This value will be authzed.api.v1.PERMISSIONSHIP_HAS_PERMISSION if the
     * requested subject is a member of the computed permission set or there
     * exists a relationship with the requested relation from the given resource
     * to the given subject.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckPermissionResponse.Permissionship permissionship = 2;</code>
     * @return int
     */
    public function getPermissionship()
    {
        return $this->permissionship;
    }

    /**
     * Permissionship communicates whether or not the subject has the requested
     * permission or has a relationship with the given resource, over the given
     * relation.
     * This value will be authzed.api.v1.PERMISSIONSHIP_HAS_PERMISSION if the
     * requested subject is a member of the computed permission set or there
     * exists a relationship with the requested relation from the given resource
     * to the given subject.
     *
     * Generated from protobuf field <code>.authzed.api.v1.CheckPermissionResponse.Permissionship permissionship = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPermissionship($var)
    {
        GPBUtil::checkEnum($var, \Authzed\Api\V1\CheckPermissionResponse\Permissionship::class);
        $this->permissionship = $var;

        return $this;
    }

}

