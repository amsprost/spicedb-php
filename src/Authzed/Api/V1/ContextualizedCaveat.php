<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * ContextualizedCaveat represents a reference to a caveat to be used by caveated relationships.
 * The context consists of key-value pairs that will be injected at evaluation time.
 * The keys must match the arguments defined on the caveat in the schema.
 *
 * Generated from protobuf message <code>authzed.api.v1.ContextualizedCaveat</code>
 */
class ContextualizedCaveat extends \Google\Protobuf\Internal\Message
{
    /**
     ** caveat_name is the name of the caveat expression to use, as defined in the schema *
     *
     * Generated from protobuf field <code>string caveat_name = 1 [(.validate.rules) = {</code>
     */
    protected $caveat_name = '';
    /**
     ** context consists of any named values that are defined at write time for the caveat expression *
     *
     * Generated from protobuf field <code>.google.protobuf.Struct context = 2 [(.validate.rules) = {</code>
     */
    protected $context = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $caveat_name
     *          * caveat_name is the name of the caveat expression to use, as defined in the schema *
     *     @type \Google\Protobuf\Struct $context
     *          * context consists of any named values that are defined at write time for the caveat expression *
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Core::initOnce();
        parent::__construct($data);
    }

    /**
     ** caveat_name is the name of the caveat expression to use, as defined in the schema *
     *
     * Generated from protobuf field <code>string caveat_name = 1 [(.validate.rules) = {</code>
     * @return string
     */
    public function getCaveatName()
    {
        return $this->caveat_name;
    }

    /**
     ** caveat_name is the name of the caveat expression to use, as defined in the schema *
     *
     * Generated from protobuf field <code>string caveat_name = 1 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setCaveatName($var)
    {
        GPBUtil::checkString($var, True);
        $this->caveat_name = $var;

        return $this;
    }

    /**
     ** context consists of any named values that are defined at write time for the caveat expression *
     *
     * Generated from protobuf field <code>.google.protobuf.Struct context = 2 [(.validate.rules) = {</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getContext()
    {
        return $this->context;
    }

    public function hasContext()
    {
        return isset($this->context);
    }

    public function clearContext()
    {
        unset($this->context);
    }

    /**
     ** context consists of any named values that are defined at write time for the caveat expression *
     *
     * Generated from protobuf field <code>.google.protobuf.Struct context = 2 [(.validate.rules) = {</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setContext($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->context = $var;

        return $this;
    }

}

