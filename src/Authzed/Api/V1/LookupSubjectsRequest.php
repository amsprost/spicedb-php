<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LookupSubjectsRequest performs a lookup of all subjects of a particular
 * kind for which the subject has the specified permission or the relation in
 * which the subject exists, streaming back the IDs of those subjects.
 *
 * Generated from protobuf message <code>authzed.api.v1.LookupSubjectsRequest</code>
 */
class LookupSubjectsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     */
    protected $consistency = null;
    /**
     * resource is the resource for which all matching subjects for the permission
     * or relation will be returned.
     *
     * Generated from protobuf field <code>.authzed.api.v1.ObjectReference resource = 2 [(.validate.rules) = {</code>
     */
    protected $resource = null;
    /**
     * permission is the name of the permission (or relation) for which to find
     * the subjects.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     */
    protected $permission = '';
    /**
     * subject_object_type is the type of subject object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string subject_object_type = 4 [(.validate.rules) = {</code>
     */
    protected $subject_object_type = '';
    /**
     * optional_subject_relation is the optional relation for the subject.
     *
     * Generated from protobuf field <code>string optional_subject_relation = 5 [(.validate.rules) = {</code>
     */
    protected $optional_subject_relation = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Authzed\Api\V1\Consistency $consistency
     *     @type \Authzed\Api\V1\ObjectReference $resource
     *           resource is the resource for which all matching subjects for the permission
     *           or relation will be returned.
     *     @type string $permission
     *           permission is the name of the permission (or relation) for which to find
     *           the subjects.
     *     @type string $subject_object_type
     *           subject_object_type is the type of subject object for which the IDs will
     *           be returned.
     *     @type string $optional_subject_relation
     *           optional_subject_relation is the optional relation for the subject.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\PermissionService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     * @return \Authzed\Api\V1\Consistency|null
     */
    public function getConsistency()
    {
        return $this->consistency;
    }

    public function hasConsistency()
    {
        return isset($this->consistency);
    }

    public function clearConsistency()
    {
        unset($this->consistency);
    }

    /**
     * Generated from protobuf field <code>.authzed.api.v1.Consistency consistency = 1;</code>
     * @param \Authzed\Api\V1\Consistency $var
     * @return $this
     */
    public function setConsistency($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\Consistency::class);
        $this->consistency = $var;

        return $this;
    }

    /**
     * resource is the resource for which all matching subjects for the permission
     * or relation will be returned.
     *
     * Generated from protobuf field <code>.authzed.api.v1.ObjectReference resource = 2 [(.validate.rules) = {</code>
     * @return \Authzed\Api\V1\ObjectReference|null
     */
    public function getResource()
    {
        return $this->resource;
    }

    public function hasResource()
    {
        return isset($this->resource);
    }

    public function clearResource()
    {
        unset($this->resource);
    }

    /**
     * resource is the resource for which all matching subjects for the permission
     * or relation will be returned.
     *
     * Generated from protobuf field <code>.authzed.api.v1.ObjectReference resource = 2 [(.validate.rules) = {</code>
     * @param \Authzed\Api\V1\ObjectReference $var
     * @return $this
     */
    public function setResource($var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\ObjectReference::class);
        $this->resource = $var;

        return $this;
    }

    /**
     * permission is the name of the permission (or relation) for which to find
     * the subjects.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     * @return string
     */
    public function getPermission()
    {
        return $this->permission;
    }

    /**
     * permission is the name of the permission (or relation) for which to find
     * the subjects.
     *
     * Generated from protobuf field <code>string permission = 3 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setPermission($var)
    {
        GPBUtil::checkString($var, True);
        $this->permission = $var;

        return $this;
    }

    /**
     * subject_object_type is the type of subject object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string subject_object_type = 4 [(.validate.rules) = {</code>
     * @return string
     */
    public function getSubjectObjectType()
    {
        return $this->subject_object_type;
    }

    /**
     * subject_object_type is the type of subject object for which the IDs will
     * be returned.
     *
     * Generated from protobuf field <code>string subject_object_type = 4 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSubjectObjectType($var)
    {
        GPBUtil::checkString($var, True);
        $this->subject_object_type = $var;

        return $this;
    }

    /**
     * optional_subject_relation is the optional relation for the subject.
     *
     * Generated from protobuf field <code>string optional_subject_relation = 5 [(.validate.rules) = {</code>
     * @return string
     */
    public function getOptionalSubjectRelation()
    {
        return $this->optional_subject_relation;
    }

    /**
     * optional_subject_relation is the optional relation for the subject.
     *
     * Generated from protobuf field <code>string optional_subject_relation = 5 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setOptionalSubjectRelation($var)
    {
        GPBUtil::checkString($var, True);
        $this->optional_subject_relation = $var;

        return $this;
    }

}

