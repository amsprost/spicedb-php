<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1\CheckPermissionResponse;

use UnexpectedValueException;

/**
 * Protobuf type <code>authzed.api.v1.CheckPermissionResponse.Permissionship</code>
 */
class Permissionship
{
    /**
     * Generated from protobuf enum <code>PERMISSIONSHIP_UNSPECIFIED = 0;</code>
     */
    const PERMISSIONSHIP_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>PERMISSIONSHIP_NO_PERMISSION = 1;</code>
     */
    const PERMISSIONSHIP_NO_PERMISSION = 1;
    /**
     * Generated from protobuf enum <code>PERMISSIONSHIP_HAS_PERMISSION = 2;</code>
     */
    const PERMISSIONSHIP_HAS_PERMISSION = 2;

    private static $valueToName = [
        self::PERMISSIONSHIP_UNSPECIFIED => 'PERMISSIONSHIP_UNSPECIFIED',
        self::PERMISSIONSHIP_NO_PERMISSION => 'PERMISSIONSHIP_NO_PERMISSION',
        self::PERMISSIONSHIP_HAS_PERMISSION => 'PERMISSIONSHIP_HAS_PERMISSION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Permissionship::class, \Authzed\Api\V1\CheckPermissionResponse_Permissionship::class);

