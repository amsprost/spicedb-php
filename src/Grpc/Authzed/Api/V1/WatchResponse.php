<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: watch_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * WatchResponse contains all tuple modification events in ascending
 * timestamp order, from the requested start snapshot to a snapshot
 * encoded in the watch response. The client can use the snapshot to resume
 * watching where the previous watch response left off.
 * </pre>
 *
 * Protobuf type <code>authzed.api.v1.WatchResponse</code>
 */
class WatchResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
     */
    private $updates;
    /**
     * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
     */
    private $changes_through = null;

    public function __construct() {
        \GPBMetadata\WatchService::initOnce();
        parent::__construct();
    }

    /**
     * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
     */
    public function getUpdates()
    {
        return $this->updates;
    }

    /**
     * <code>repeated .authzed.api.v1.RelationshipUpdate updates = 1;</code>
     */
    public function setUpdates(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Authzed\Api\V1\RelationshipUpdate::class);
        $this->updates = $var;
    }

    /**
     * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
     */
    public function getChangesThrough()
    {
        return $this->changes_through;
    }

    /**
     * <code>.authzed.api.v1.ZedToken changes_through = 2;</code>
     */
    public function setChangesThrough(&$var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\ZedToken::class);
        $this->changes_through = $var;
    }

}

