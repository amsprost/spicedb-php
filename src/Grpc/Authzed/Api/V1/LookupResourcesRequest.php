<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: permission_service.proto

namespace Authzed\Api\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * LookupResourcesRequest performs a lookup of all resources of a particular
 * kind on which the subject has the specified permission or the relation in
 * which the subject exists, streaming back the IDs of those resources.
 * </pre>
 *
 * Protobuf type <code>authzed.api.v1.LookupResourcesRequest</code>
 */
class LookupResourcesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.authzed.api.v1.Consistency consistency = 1;</code>
     */
    private $consistency = null;
    /**
     * <pre>
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     * </pre>
     *
     * <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     */
    private $resource_object_type = '';
    /**
     * <pre>
     * permission is the name of the permission or relation for which the subject
     * must Check.
     * </pre>
     *
     * <code>string permission = 3 [(.validate.rules) = {</code>
     */
    private $permission = '';
    /**
     * <pre>
     * subject is the subject with access to the resources.
     * </pre>
     *
     * <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     */
    private $subject = null;

    public function __construct() {
        \GPBMetadata\PermissionService::initOnce();
        parent::__construct();
    }

    /**
     * <code>.authzed.api.v1.Consistency consistency = 1;</code>
     */
    public function getConsistency()
    {
        return $this->consistency;
    }

    /**
     * <code>.authzed.api.v1.Consistency consistency = 1;</code>
     */
    public function setConsistency(&$var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\Consistency::class);
        $this->consistency = $var;
    }

    /**
     * <pre>
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     * </pre>
     *
     * <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     */
    public function getResourceObjectType()
    {
        return $this->resource_object_type;
    }

    /**
     * <pre>
     * resource_object_type is the type of resource object for which the IDs will
     * be returned.
     * </pre>
     *
     * <code>string resource_object_type = 2 [(.validate.rules) = {</code>
     */
    public function setResourceObjectType($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource_object_type = $var;
    }

    /**
     * <pre>
     * permission is the name of the permission or relation for which the subject
     * must Check.
     * </pre>
     *
     * <code>string permission = 3 [(.validate.rules) = {</code>
     */
    public function getPermission()
    {
        return $this->permission;
    }

    /**
     * <pre>
     * permission is the name of the permission or relation for which the subject
     * must Check.
     * </pre>
     *
     * <code>string permission = 3 [(.validate.rules) = {</code>
     */
    public function setPermission($var)
    {
        GPBUtil::checkString($var, True);
        $this->permission = $var;
    }

    /**
     * <pre>
     * subject is the subject with access to the resources.
     * </pre>
     *
     * <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * <pre>
     * subject is the subject with access to the resources.
     * </pre>
     *
     * <code>.authzed.api.v1.SubjectReference subject = 4 [(.validate.rules) = {</code>
     */
    public function setSubject(&$var)
    {
        GPBUtil::checkMessage($var, \Authzed\Api\V1\SubjectReference::class);
        $this->subject = $var;
    }

}

